basePath: /api/v1
definitions:
  domains.Board:
    properties:
      createdBy:
        type: integer
      id:
        type: integer
      isPrivate:
        type: boolean
      name:
        type: string
    type: object
  domains.Notification:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      message:
        type: string
      readAt:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/domains.User'
      userID:
        type: integer
    type: object
  domains.Role:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      weight:
        type: integer
    type: object
  domains.TaskDependency:
    properties:
      dependentTaskID:
        type: integer
      taskID:
        type: integer
    type: object
  domains.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/domains.UserRole'
    type: object
  domains.UserRole:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - UserRoleUser
    - UserRoleAdmin
  handlers.AssignTaskRequest:
    properties:
      task_id:
        example: 1
        minimum: 1
        type: integer
      user_id:
        example: 1
        minimum: 1
        type: integer
    required:
    - task_id
    - user_id
    type: object
  handlers.ChangeUserRoleRequest:
    properties:
      role_name:
        type: string
    type: object
  handlers.ColumnChangeRequest:
    properties:
      new_column_id:
        example: 1
        minimum: 1
        type: integer
    required:
    - new_column_id
    type: object
  handlers.CreateBoardRequest:
    properties:
      is_private:
        example: false
        type: boolean
      name:
        example: new board
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    type: object
  handlers.CreateColumnRequest:
    properties:
      is_final:
        example: false
        type: boolean
      name:
        example: new column
        maxLength: 20
        minLength: 3
        type: string
    required:
    - name
    type: object
  handlers.CreateRoleRequest:
    properties:
      description:
        example: role description
        maxLength: 255
        type: string
      name:
        example: new role
        maxLength: 50
        minLength: 3
        type: string
      weight:
        example: 1
        type: integer
    required:
    - description
    - name
    - weight
    type: object
  handlers.InviteUserRequest:
    properties:
      role_name:
        type: string
      user_id:
        type: integer
    type: object
  handlers.LoginInput:
    properties:
      email:
        example: test1@test.com
        type: string
      password:
        example: 1234Test@
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  handlers.MoveColumnRequest:
    properties:
      position:
        example: 2
        minimum: 0
        type: integer
    required:
    - position
    type: object
  handlers.Response:
    properties:
      data: {}
      message:
        type: string
      page:
        type: integer
      page_size:
        type: integer
      status:
        type: integer
      success:
        type: boolean
      total:
        type: integer
    type: object
  handlers.SignUpInput:
    properties:
      email:
        example: test@example.com
        type: string
      name:
        example: test
        maxLength: 20
        minLength: 3
        type: string
      password:
        example: 1234Test@
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.TaskCommentRequest:
    properties:
      comment:
        example: new comment
        maxLength: 50
        minLength: 3
        type: string
    required:
    - comment
    type: object
  handlers.TaskRequest:
    properties:
      assignee_id:
        example: 1
        minimum: 1
        type: integer
      column_id:
        example: 1
        minimum: 1
        type: integer
      description:
        example: This is the description
        maxLength: 2000
        minLength: 1
        type: string
      end_datetime:
        example: "2020-01-01 16:30:00"
        type: string
      name:
        example: new task
        maxLength: 50
        minLength: 3
        type: string
      order_position:
        example: 1
        type: integer
      parent_id:
        example: 1
        minimum: 1
        type: integer
      start_datetime:
        example: "2020-01-01 16:30:00"
        type: string
      story_point:
        example: 1
        type: integer
    required:
    - column_id
    - description
    - end_datetime
    - name
    - order_position
    - start_datetime
    - story_point
    type: object
  handlers.UpdateBoardRequest:
    properties:
      is_private:
        example: false
        type: boolean
      name:
        example: new board
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    type: object
  handlers.UpdateColumnRequest:
    properties:
      name:
        example: new column
        maxLength: 20
        minLength: 3
        type: string
    required:
    - name
    type: object
  handlers.UpdateRoleRequest:
    properties:
      description:
        example: updated description
        maxLength: 255
        type: string
      name:
        example: updated role
        maxLength: 50
        minLength: 3
        type: string
      weight:
        example: 1
        type: integer
    required:
    - description
    - name
    - weight
    type: object
  presenter.NotificationPresenter:
    properties:
      created_at:
        type: string
      id:
        type: string
      message:
        type: string
      read_at:
        type: string
      type:
        type: string
    type: object
host: 0.0.0.0:8082
info:
  contact:
    name: GoBootcamp-Group1
    url: https://github.com/GoBootCamp-Group1
  description: This is a task management application.
  title: Task Manager
  version: "1.0"
paths:
  /boards:
    post:
      consumes:
      - application/json
      description: creates a board
      parameters:
      - description: Create Board
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateBoardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Board
      tags:
      - Board
  /boards/{board_id}/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: removes a user from board
      parameters:
      - description: Board ID
        in: path
        name: board_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Remove User from Board
      tags:
      - Board
    put:
      consumes:
      - application/json
      description: changes user role in board
      parameters:
      - description: Board ID
        in: path
        name: board_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Create Board
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.ChangeUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Change User Role in Board
      tags:
      - Board
  /boards/{boardID}/tasks:
    get:
      description: gets tasks for a board
      parameters:
      - description: Board ID
        in: path
        name: boardID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Response'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Tasks
      tags:
      - Task
  /boards/{boardID}/tasks/:
    post:
      consumes:
      - application/json
      description: creates a task
      parameters:
      - description: Create Task
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskRequest'
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Task
      tags:
      - Task
  /boards/{boardID}/tasks/{id}:
    delete:
      description: deleted a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Task
      tags:
      - Task
  /boards/{boardID}/tasks/{id}/children:
    get:
      description: get list of a task children
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get TaskChildren
      tags:
      - Task
  /boards/{boardID}/tasks/{taskID}:
    get:
      description: gets a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Task
      tags:
      - Task
    put:
      consumes:
      - application/json
      description: updates a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Task
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update Task
      tags:
      - Task
  /boards/{boardID}/tasks/{taskID}/column:
    patch:
      consumes:
      - application/json
      description: updates a task column
      parameters:
      - description: Board ID
        in: path
        name: boardID
        required: true
        type: string
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: string
      - description: Update Task Column
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.ColumnChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update Task column
      tags:
      - Task
  /boards/{boardID}/tasks/{taskID}/comments:
    get:
      description: gets comments for a task
      parameters:
      - description: Board ID
        in: path
        name: boardID
        required: true
        type: string
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Response'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Tasks
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: creates a task comment
      parameters:
      - description: Create Task Comment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Task comment
      tags:
      - Task
  /boards/{boardID}/tasks/{taskID}/comments/{id}:
    delete:
      description: deleted a comment
      parameters:
      - description: Board ID
        in: path
        name: boardID
        required: true
        type: string
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: string
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Comment
      tags:
      - Task
    get:
      description: gets a task comment
      parameters:
      - description: Board ID
        in: path
        name: boardID
        required: true
        type: string
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: string
      - description: Comment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Comment
      tags:
      - Task
  /boards/{boardID}/tasks/{taskID}/dependencies:
    get:
      consumes:
      - application/json
      description: retrieves the dependencies for a given task
      parameters:
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domains.TaskDependency'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Task Dependencies
      tags:
      - Task
  /boards/{boardID}/tasks/{taskID}/dependencies/{dependentTaskID}:
    delete:
      consumes:
      - application/json
      description: removes a dependency between two tasks
      parameters:
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: integer
      - description: Dependent Task ID
        in: path
        name: dependentTaskID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Remove Task Dependency
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: adds a dependency between two tasks
      parameters:
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: integer
      - description: Dependent Task ID
        in: path
        name: dependentTaskID
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Add Task Dependency
      tags:
      - Task
  /boards/{boardId}/columns:
    get:
      description: gets all columns of a bard
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Columns
      tags:
      - Column
    post:
      consumes:
      - application/json
      description: create a column
      parameters:
      - description: Create Column
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateColumnRequest'
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Column
      tags:
      - Column
  /boards/{boardId}/columns/{id}:
    delete:
      consumes:
      - application/json
      description: delete a column
      parameters:
      - description: Column ID
        in: path
        name: id
        required: true
        type: string
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Column
      tags:
      - Column
    get:
      description: gets a column
      parameters:
      - description: Column ID
        in: path
        name: id
        required: true
        type: string
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Column
      tags:
      - Column
    put:
      consumes:
      - application/json
      description: update a column
      parameters:
      - description: Column ID
        in: path
        name: id
        required: true
        type: string
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: New Column name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateColumnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update Column
      tags:
      - Column
  /boards/{boardId}/columns/{id}/final:
    put:
      consumes:
      - application/json
      description: make a column as a final column
      parameters:
      - description: Column ID
        in: path
        name: id
        required: true
        type: string
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Final Column
      tags:
      - Column
  /boards/{boardId}/columns/{id}/move:
    put:
      consumes:
      - application/json
      description: move a column
      parameters:
      - description: Column ID
        in: path
        name: id
        required: true
        type: string
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: new position of column [id]
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.MoveColumnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Move Column
      tags:
      - Column
  /boards/{id}:
    delete:
      description: deleted a board
      parameters:
      - description: Board ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Board
      tags:
      - Board
    get:
      description: gets a board
      parameters:
      - description: Board ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.Board'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Board
      tags:
      - Board
    put:
      consumes:
      - application/json
      description: updates a board
      parameters:
      - description: Board ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Board
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateBoardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update Board
      tags:
      - Board
  /boards/{id}/add-user:
    post:
      consumes:
      - application/json
      description: invites a user to board
      parameters:
      - description: Board ID
        in: path
        name: id
        required: true
        type: string
      - description: Create Board
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.InviteUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Invite User to Board
      tags:
      - Board
  /login:
    post:
      consumes:
      - application/json
      description: login user with email and password
      parameters:
      - description: User Login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: User login
      tags:
      - Authentication
  /notifications:
    get:
      description: gets Notifications for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenter.NotificationPresenter'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Notifications
      tags:
      - Notification
  /notifications/{id}:
    delete:
      description: deleted a Notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Notification
      tags:
      - Notification
    get:
      description: gets a Notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.Notification'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Notification
      tags:
      - Notification
  /notifications/{id}/read:
    patch:
      consumes:
      - application/json
      description: reads a Notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Read Notification
      tags:
      - Notification
  /notifications/{id}/unread:
    patch:
      consumes:
      - application/json
      description: unread a Notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: UnRead Notification
      tags:
      - Notification
  /notifications/unread:
    get:
      description: gets Unread Notifications for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenter.NotificationPresenter'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Unread Notifications
      tags:
      - Notification
  /roles:
    post:
      consumes:
      - application/json
      description: creates a role
      parameters:
      - description: Create Role
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Role
      tags:
      - Role
  /roles/{id}:
    delete:
      description: deletes a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Role
      tags:
      - Role
    get:
      description: gets a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.Role'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Role
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: updates a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Role
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update Role
      tags:
      - Role
  /signup:
    post:
      consumes:
      - application/json
      description: Register a user with email, name and password
      parameters:
      - description: User Registration
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.SignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: User registration
      tags:
      - Authentication
  /tasks/{taskID}/assign:
    post:
      consumes:
      - application/json
      description: assigns a user to a task
      parameters:
      - description: Assign Task
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.AssignTaskRequest'
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Assign Task
      tags:
      - Task
security:
- ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
